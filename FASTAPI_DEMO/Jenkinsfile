pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                git url: 'https://github.com/skundu1234/jenkins-webhook-test/', branch: 'main'
            }
        }

        stage('Static code analysis') {
            environment {
                SONA_URL = "http://my-sonarqube-sonarqube.obs-test-ns.svc.cluster.local:9000"
            }
            steps {
                withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
                    // Add SonarQube scan command here
                    sh 'echo "Run SonarQube analysis here"'
                }
            }
        }

        stage('Build and Push Docker Image') {
            environment {
                DOCKER_IMAGE = "skundu1234/jenkins:${BUILD_NUMBER}"
            }
            steps {
                script {
                    sh 'cd FASTAPI_DEMO && docker build -t ${DOCKER_IMAGE} .'
                    def dockerImage = docker.image("${DOCKER_IMAGE}")
                    docker.withRegistry('https://index.docker.io/v1/', 'docker-cred') {
                        dockerImage.push()
                    }
                }
            }
        }

        stage('Update deployment file') {
            environment {
                GIT_REPO_NAME = "jenkins-webhook-test"
                GIT_USER_NAME = "skundu1234"
            }
            steps {
                withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                    sh '''
                        git config user.email "sourav.kundu967@gmail.com"
                        git config user.name "Sourav Kundu"
                        sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" FASTAPI_DEMO/deployment.yml
                        git add FASTAPI_DEMO/deployment.yml
                        git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                        git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                    '''
                }
            }
        }
    }
}
